{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HousingService = /*#__PURE__*/(() => {\n  class HousingService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n\n    getAllCities() {\n      return this.http.get('https://localhost:5001/api/city');\n    }\n\n    getProperty(id) {\n      return this.getAllProperties(1).pipe(map(propertiesArray => {\n        //  throw new Error('Some error')\n        return propertiesArray.find(p => p.id === id);\n      }));\n    }\n\n    getAllProperties(SellRent) {\n      return this.http.get(this.baseUrl + '/property/list/' + SellRent.toString());\n    }\n\n    addProperty(property) {\n      let newProp = [property]; // Add new property in array if newProp aleady exists in local storag\n\n      if (localStorage.getItem('newProp')) {\n        newProp = [property, ...JSON.parse(localStorage.getItem('newProp'))];\n      }\n\n      localStorage.setItem('newProp', JSON.stringify(newProp));\n    }\n\n    newPropID() {\n      if (localStorage.getItem('PID')) {\n        localStorage.setItem('PID', String(+localStorage.getItem('PID') + 1));\n        return +localStorage.getItem('PID');\n      } else {\n        localStorage.setItem('PID', '101');\n        return 101;\n      }\n    }\n\n  }\n\n  HousingService.ɵfac = function HousingService_Factory(t) {\n    return new (t || HousingService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HousingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HousingService,\n    factory: HousingService.ɵfac,\n    providedIn: 'root'\n  });\n  return HousingService;\n})();","map":null,"metadata":{},"sourceType":"module"}